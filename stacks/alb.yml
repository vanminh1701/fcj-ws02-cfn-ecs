---
AWSTemplateFormatVersion: '2010-09-09'
Description: Load Balancer for ECS tasks
Parameters:
  VpcStackName:
    Type: String
    Description: VpcStackName
Resources:

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      LoadBalancerAttributes:
      - Key: idle_timeout.timeout_seconds
        Value: '30'
      Subnets:
        - Fn::ImportValue:
            !Sub "${VpcStackName}-PublicSubnet1"
        - Fn::ImportValue:
            !Sub "${VpcStackName}-PublicSubnet2"
      SecurityGroups:
      - !Ref LoadBalancerSG

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: 'forward'
        ForwardConfig:
          TargetGroups:
          - TargetGroupArn: !Ref WebTargetGroup1
            Weight: 100
      LoadBalancerArn: !Ref 'LoadBalancer'
      Port: 80
      Protocol: HTTP

  # Keeps track of the list of tasks for the service
  WebTargetGroup1:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 6
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetType: ip
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 10
      VpcId:  
        Fn::ImportValue:
            !Sub "${VpcStackName}-VpcId"

  WebTargetGroup2:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 6
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetType: ip
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 10
      VpcId:  
        Fn::ImportValue:
            !Sub "${VpcStackName}-VpcId"

  # A public facing load balancer, this is used as ingress for
  # public facing internet traffic.
  LoadBalancerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to the public facing load balancer
      VpcId:  
        Fn::ImportValue:
            !Sub "${VpcStackName}-VpcId"
      SecurityGroupIngress:
      # Allow access to public facing ALB from any IP address
      - CidrIp: 0.0.0.0/0
        IpProtocol: -1

Outputs:
  LoadBalancer:
    Value: !Ref LoadBalancer
    Description: LoadBalancer
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-LoadBalancer"

  WebTargetGroup1:
    Value: !Ref WebTargetGroup1
    Description: TargetGroup For Web
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-WebTargetGroup1"

  WebTargetGroup2:
    Value: !Ref WebTargetGroup2
    Description: TargetGroup For Web
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-WebTargetGroup2"

  LoadBalancerSG:
    Value: !Ref LoadBalancerSG
    Description: LoadBalancerSG
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-LoadBalancerSG"
  WebTargetGroupInfoList:
    Value: !Join [",", [!GetAtt WebTargetGroup1.TargetGroupName, !GetAtt WebTargetGroup2.TargetGroupName]]
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-WebTargetGroupInfoList"

  Listener:
    Value: !Ref LoadBalancerListener
    Export:
      Name: !Sub "${AWS::StackName}-Listener"
  

