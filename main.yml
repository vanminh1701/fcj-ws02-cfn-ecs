AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation for deploying project with ECS service
Parameters:
  BucketName:
    Type: String
    Description: S3 address of stack resources and files
    Default: tvm-cf-templates
  VpcStackExportPrefixName:
    Type: String
    Description: VPC stack name prefix to get exported values 
    Default: ws02-vpc
  PrimaryRegion:
    Type: String
    AllowedValues: ["ap-southeast-1", "ap-northeast-1"]
    Default: ap-southeast-1 # Singapore
Mappings: 
  Compute: 
    Primary: 
      WebTaskCount: 1
      ApiTaskCount: 1
    Secondary: 
      WebTaskCount: 0
      ApiTaskCount: 0
Conditions:
  IsPrimary: !Equals [!Ref AWS::Region, ap-southeast-1]
  IsSecondary: !Equals [!Ref AWS::Region, ap-northeast-1]

Resources:
  ecsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${BucketName}.s3.${AWS::Region}.amazonaws.com/stacks/ecs.yml
      Parameters:
        VpcStackName: !Ref VpcStackExportPrefixName
  ecsALBStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${BucketName}.s3.${AWS::Region}.amazonaws.com/stacks/alb.yml
      Parameters:
        VpcStackName: !Ref VpcStackExportPrefixName
  eventBridgeStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${BucketName}.s3.${AWS::Region}.amazonaws.com/stacks/event-bridge.yml
      Parameters:
        ClusterARN: ecsStack.Outputs.ClusterARN
  metricFilterStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${BucketName}.s3.${AWS::Region}.amazonaws.com/stacks/metric-filter.yml
        
  # ecrStack:
  #   Type: AWS::CloudFormation::Stack
  #   Condition: IsPrimary
  #   Properties:
  #     TemplateURL: !Sub https://${BucketName}.s3.${AWS::Region}.amazonaws.com/stacks/ecr.yml
  #     Parameters:
  #       RepositoryName: ws02
  #       SecondaryRegion: ap-northeast-1
  # taskWebStack:
  #   Type: AWS::CloudFormation::Stack
  #   DependsOn:
  #     - ecsStack
  #     - ecsALBStack
  #   Properties:
  #     TemplateURL: !Sub https://${BucketName}.s3.${AWS::Region}.amazonaws.com/stacks/task-web.yml
  #     Parameters:
  #       VpcStackName: !Ref VpcStackExportPrefixName
  #       ClusterName: !GetAtt ecsStack.Outputs.ClusterName
  #       CapacityProvider: !GetAtt ecsStack.Outputs.CapacityProvider
  #       ServiceName: web
  #       TaskExecutionRoleArn: !GetAtt ecsStack.Outputs.TaskExecutionRoleArn
  #       TaskRole: !GetAtt ecsStack.Outputs.TaskRole
  #       ImageUrl: gcr.io/kuar-demo/kuard-amd64:blue
  #       ELBTargetGroupArn: !GetAtt ecsALBStack.Outputs.WebTargetGroup1
  #       DesiredCount:
  #         !If
  #           - IsPrimary
  #           - !FindInMap [Compute, Primary, WebTaskCount]
  #           - !FindInMap [Compute, Secondary, WebTaskCount]
  taskAPIStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - ecsStack
      - ecsALBStack
    Properties:
      TemplateURL: !Sub https://${BucketName}.s3.${AWS::Region}.amazonaws.com/stacks/task-api.yml
      Parameters:
        VpcStackName: !Ref VpcStackExportPrefixName
        ClusterName: !GetAtt ecsStack.Outputs.ClusterName
        ServiceName: api
        TaskExecutionRoleArn: !GetAtt ecsStack.Outputs.TaskExecutionRoleArn
        TaskRole: !GetAtt ecsStack.Outputs.TaskRole
        ImageUrl: gcr.io/kuar-demo/kuard-amd64:blue
        ContainerPort: 8080
        ELBTargetGroupArn: !GetAtt ecsALBStack.Outputs.WebTargetGroup1 # Group 1: web, 2: api
        DesiredCount:
          !If
            - IsPrimary
            - !FindInMap [Compute, Primary, ApiTaskCount]
            - !FindInMap [Compute, Secondary, ApiTaskCount]
