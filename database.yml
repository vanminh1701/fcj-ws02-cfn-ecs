AWSTemplateFormatVersion: '2010-09-09'
Description: ECR repository
Parameters:
  DBInstanceClass:
    Type: String
    Default: db.t3.micro
  DBName: 
    Type: String
    Default: ws02instance
  VpcStackName: 
    Type: String
    Default: VpcStackName
  SourceDBInstanceIdentifier:
    Type: String
  SourceRegion:
    Type: String
    Default: ap-southeast-1
    
Conditions:
  IsPrimary: !Equals [!Ref AWS::Region, ap-southeast-1]
  IsSecondary: !Not [!Equals [!Ref AWS::Region, ap-southeast-1]]

Resources:
  DBParameterGroup:
    Type: 'AWS::RDS::DBParameterGroup'
    Condition: IsPrimary
    Properties:
      Description: CloudFormation Sample Postgres Parameter Group for replication
      Family: postgres16
      Parameters:
        rds.logical_replication: 1
  SubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: ws02 private subnets 
      DBSubnetGroupName: ws02
      # Get from VPC
      SubnetIds: 
        - !Select
          - 0
          - !Split
            - ','
            - Fn::ImportValue:
                Fn::Sub: ${VpcStackName}-PrivateSubnets
        - !Select
          - 1
          - !Split
            - ','
            - Fn::ImportValue:
                Fn::Sub: ${VpcStackName}-PrivateSubnets
  DB:
    Type: 'AWS::RDS::DBInstance'
    Condition: IsPrimary
    Properties:
      DBInstanceIdentifier: !Ref DBName
      DBName: ws02
      DBInstanceClass: !Ref DBInstanceClass
      Engine: postgres
      EngineVersion: "16.2"
      MasterUsername: postgres
      MasterUserPassword: '{{resolve:ssm-secure:ws02-db-pw:1}}'
      DBParameterGroupName: !Ref DBParameterGroup
      StorageType: gp3
      AllocatedStorage: 20
      DBSubnetGroupName: !Ref SubnetGroup
      MultiAZ: false

  RegionReadReplica:
    Type: "AWS::RDS::DBInstance"
    Condition: IsSecondary
    Properties:
      DBInstanceClass: !Ref DBInstanceClass
      SourceDBInstanceIdentifier: !Ref SourceDBInstanceIdentifier
      DBInstanceIdentifier: ws02-replica
      SourceRegion: !Ref SourceRegion
      MultiAZ: false

Outputs:
  DB:
    Description: Primary DB
    Value: !If  [IsPrimary, !Ref DB, 'None']
    Export:
      Name: !Sub ${AWS::StackName}-DB
  
  RegionReadReplica:
    Description: Replica DB
    Value: !If  [IsSecondary, !Ref RegionReadReplica, 'None']
    Export:
      Name: !Sub ${AWS::StackName}-RegionReadReplica